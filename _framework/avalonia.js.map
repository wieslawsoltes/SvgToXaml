{
  "version": 3,
  "sources": ["../webapp/modules/avalonia/caretHelper.ts", "../webapp/modules/avalonia/input.ts", "../webapp/modules/avalonia/dom.ts", "../webapp/modules/avalonia/caniuse.ts", "../webapp/modules/avalonia/stream.ts", "../webapp/modules/avalonia/nativeControlHost.ts", "../webapp/modules/avalonia/navigationHelper.ts", "../webapp/modules/avalonia/generalHelpers.ts", "../webapp/modules/avalonia/timer.ts", "../webapp/modules/avalonia/surfaces/surfaceBase.ts", "../webapp/modules/avalonia/surfaces/resizeHandler.ts", "../webapp/modules/avalonia/surfaces/htmlSurfaceBase.ts", "../webapp/modules/avalonia/surfaces/softwareSurface.ts", "../webapp/modules/avalonia/surfaces/webGlSurface.ts", "../webapp/modules/avalonia/surfaces/surfaceFactory.ts", "../webapp/modules/avalonia.ts"],
  "sourcesContent": ["// Based on https://github.com/component/textarea-caret-position/blob/master/index.js\r\nexport class CaretHelper {\r\n    public static getCaretCoordinates(\r\n        element: HTMLInputElement | HTMLTextAreaElement,\r\n        position: number,\r\n        options?: { debug: boolean }\r\n    ) {\r\n        if (!isBrowser) {\r\n            throw new Error(\r\n                \"textarea-caret-position#getCaretCoordinates should only be called in a browser\"\r\n            );\r\n        }\r\n\r\n        const debug = options?.debug ?? false;\r\n        if (debug) {\r\n            const el = document.querySelector(\r\n                \"#input-textarea-caret-position-mirror-div\"\r\n            );\r\n            if (el) el.parentNode?.removeChild(el);\r\n        }\r\n\r\n        // The mirror div will replicate the textarea's style\r\n        const div = document.createElement(\"div\");\r\n        div.id = \"input-textarea-caret-position-mirror-div\";\r\n        document.body.appendChild(div);\r\n\r\n        const style = div.style;\r\n        const computed = window.getComputedStyle\r\n            ? window.getComputedStyle(element)\r\n            : ((element as any).currentStyle as CSSStyleDeclaration); // currentStyle for IE < 9\r\n        const isInput = element.nodeName === \"INPUT\";\r\n\r\n        // Default textarea styles\r\n        style.whiteSpace = \"pre-wrap\";\r\n        if (!isInput) style.wordWrap = \"break-word\"; // only for textarea-s\r\n\r\n        // Position off-screen\r\n        style.position = \"absolute\"; // required to return coordinates properly\r\n        if (!debug) style.visibility = \"hidden\"; // not 'display: none' because we want rendering\r\n\r\n        // Transfer the element's properties to the div\r\n        properties.forEach((prop: string) => {\r\n            if (isInput && prop === \"lineHeight\") {\r\n                // Special case for <input>s because text is rendered centered and line height may be != height\r\n                if (computed.boxSizing === \"border-box\") {\r\n                    const height = parseInt(computed.height);\r\n                    const outerHeight =\r\n                        parseInt(computed.paddingTop) +\r\n                        parseInt(computed.paddingBottom) +\r\n                        parseInt(computed.borderTopWidth) +\r\n                        parseInt(computed.borderBottomWidth);\r\n                    const targetHeight = outerHeight + parseInt(computed.lineHeight);\r\n                    if (height > targetHeight) {\r\n                        style.lineHeight = `${height - outerHeight}px`;\r\n                    } else if (height === targetHeight) {\r\n                        style.lineHeight = computed.lineHeight;\r\n                    } else {\r\n                        style.lineHeight = \"0\";\r\n                    }\r\n                } else {\r\n                    style.lineHeight = computed.height;\r\n                }\r\n            } else {\r\n                (style as any)[prop] = (computed as any)[prop];\r\n            }\r\n        });\r\n\r\n        if (isFirefox) {\r\n            // Firefox lies about the overflow property for textareas: https://bugzilla.mozilla.org/show_bug.cgi?id=984275\r\n            if (element.scrollHeight > parseInt(computed.height)) {\r\n                style.overflowY = \"scroll\";\r\n            }\r\n        } else {\r\n            style.overflow = \"hidden\"; // for Chrome to not render a scrollbar; IE keeps overflowY = 'scroll'\r\n        }\r\n\r\n        div.textContent = element.value.substring(0, position);\r\n        // The second special handling for input type=\"text\" vs textarea:\r\n        // spaces need to be replaced with non-breaking spaces - http://stackoverflow.com/a/13402035/1269037\r\n        if (isInput) div.textContent = div.textContent.replace(/\\s/g, \"\\u00a0\");\r\n\r\n        const span = document.createElement(\"span\");\r\n        // Wrapping must be replicated *exactly*, including when a long word gets\r\n        // onto the next line, with whitespace at the end of the line before (#7).\r\n        // The  *only* reliable way to do that is to copy the *entire* rest of the\r\n        // textarea's content into the <span> created at the caret position.\r\n        // For inputs, just '.' would be enough, but no need to bother.\r\n        span.textContent = element.value.substring(position) || \".\"; // || because a completely empty faux span doesn't render at all\r\n        div.appendChild(span);\r\n\r\n        const coordinates = {\r\n            top: span.offsetTop + parseInt(computed.borderTopWidth),\r\n            left: span.offsetLeft + parseInt(computed.borderLeftWidth),\r\n            height: parseInt(computed.lineHeight)\r\n        };\r\n\r\n        if (debug) {\r\n            span.style.backgroundColor = \"#aaa\";\r\n        } else {\r\n            document.body.removeChild(div);\r\n        }\r\n\r\n        return coordinates;\r\n    }\r\n}\r\n\r\nconst properties = [\r\n    \"direction\", // RTL support\r\n    \"boxSizing\",\r\n    \"width\", // on Chrome and IE, exclude the scrollbar, so the mirror div wraps exactly as the textarea does\r\n    \"height\",\r\n    \"overflowX\",\r\n    \"overflowY\", // copy the scrollbar for IE\r\n\r\n    \"borderTopWidth\",\r\n    \"borderRightWidth\",\r\n    \"borderBottomWidth\",\r\n    \"borderLeftWidth\",\r\n    \"borderStyle\",\r\n\r\n    \"paddingTop\",\r\n    \"paddingRight\",\r\n    \"paddingBottom\",\r\n    \"paddingLeft\",\r\n\r\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/font\r\n    \"fontStyle\",\r\n    \"fontVariant\",\r\n    \"fontWeight\",\r\n    \"fontStretch\",\r\n    \"fontSize\",\r\n    \"fontSizeAdjust\",\r\n    \"lineHeight\",\r\n    \"fontFamily\",\r\n\r\n    \"textAlign\",\r\n    \"textTransform\",\r\n    \"textIndent\",\r\n    \"textDecoration\", // might not make a difference, but better be safe\r\n\r\n    \"letterSpacing\",\r\n    \"wordSpacing\",\r\n\r\n    \"tabSize\",\r\n    \"MozTabSize\"\r\n];\r\n\r\nconst isBrowser = typeof window !== \"undefined\";\r\nconst isFirefox = isBrowser && (window as any).mozInnerScreenX != null;\r\n", "import { CaretHelper } from \"./caretHelper\";\r\n\r\nenum RawInputModifiers {\r\n    None = 0,\r\n    Alt = 1,\r\n    Control = 2,\r\n    Shift = 4,\r\n    Meta = 8,\r\n\r\n    LeftMouseButton = 16,\r\n    RightMouseButton = 32,\r\n    MiddleMouseButton = 64,\r\n    XButton1MouseButton = 128,\r\n    XButton2MouseButton = 256,\r\n    KeyboardMask = Alt | Control | Shift | Meta,\r\n\r\n    PenInverted = 512,\r\n    PenEraser = 1024,\r\n    PenBarrelButton = 2048\r\n}\r\n\r\n/*\r\n* This is a hack to handle Mozilla clipboard events in a more convinient way for framework users.\r\n* In the browser, events go in order KeyDown -> Paste -> KeyUp.\r\n* On KeyDown we trigger Avalonia handlers, which might execute readClipboardText.\r\n* When readClipboardText was executed, we mark ClipboardState as Pending and setup clipboard promise,\r\n* which will un-handle KeyDown event, basically allowing browser to pass a Paste event properly.\r\n* On actual Paste event we execute promise callbacks, resuming async operation, and returning pasted text to the app.\r\n* Note #1, on every KeyUp event we will reset all the state and reject pending promises if any, as this event it expected to come after Paste.\r\n* Note #2, whole this code will be executed only on legacy browsers like Mozilla, where clipboard.readText is not available.\r\n* Note #3, with all of these hacks Clipboard.ReadText will still work only on actual \"paste\" gesture initiated by user.\r\n* */\r\nenum ClipboardState {\r\n    None,\r\n    Ready,\r\n    Pending\r\n}\r\n\r\nexport class InputHelper {\r\n    static clipboardState: ClipboardState = ClipboardState.None;\r\n    static resolveClipboard?: any;\r\n    static rejectClipboard?: any;\r\n\r\n    public static initializeBackgroundHandlers() {\r\n        if (this.clipboardState !== ClipboardState.None) {\r\n            return;\r\n        }\r\n\r\n        globalThis.addEventListener(\"paste\", (args: any) => {\r\n            if (this.clipboardState === ClipboardState.Pending) {\r\n                this.resolveClipboard(args.clipboardData.getData(\"text\"));\r\n            }\r\n        });\r\n        this.clipboardState = ClipboardState.Ready;\r\n    }\r\n\r\n    public static async readClipboardText(): Promise<string> {\r\n        if (globalThis.navigator.clipboard.readText) {\r\n            return await globalThis.navigator.clipboard.readText();\r\n        } else {\r\n            try {\r\n                return await new Promise<any>((resolve, reject) => {\r\n                    this.clipboardState = ClipboardState.Pending;\r\n                    this.resolveClipboard = resolve;\r\n                    this.rejectClipboard = reject;\r\n                });\r\n            } finally {\r\n                this.clipboardState = ClipboardState.Ready;\r\n                this.resolveClipboard = null;\r\n                this.rejectClipboard = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    public static subscribeKeyEvents(\r\n        element: HTMLInputElement,\r\n        keyDownCallback: (code: string, key: string, modifiers: string) => boolean,\r\n        keyUpCallback: (code: string, key: string, modifiers: string) => boolean) {\r\n        const keyDownHandler = (args: KeyboardEvent) => {\r\n            if (keyDownCallback(args.code, args.key, this.getModifiers(args))) {\r\n                if (this.clipboardState !== ClipboardState.Pending) {\r\n                    args.preventDefault();\r\n                }\r\n            }\r\n        };\r\n        element.addEventListener(\"keydown\", keyDownHandler);\r\n\r\n        const keyUpHandler = (args: KeyboardEvent) => {\r\n            if (keyUpCallback(args.code, args.key, this.getModifiers(args))) {\r\n                args.preventDefault();\r\n            }\r\n            if (this.rejectClipboard) {\r\n                this.rejectClipboard();\r\n            }\r\n        };\r\n\r\n        element.addEventListener(\"keyup\", keyUpHandler);\r\n\r\n        return () => {\r\n            element.removeEventListener(\"keydown\", keyDownHandler);\r\n            element.removeEventListener(\"keyup\", keyUpHandler);\r\n        };\r\n    }\r\n\r\n    public static subscribeTextEvents(\r\n        element: HTMLInputElement,\r\n        beforeInputCallback: (args: InputEvent, start: number, end: number) => boolean,\r\n        compositionStartCallback: (args: CompositionEvent) => boolean,\r\n        compositionUpdateCallback: (args: CompositionEvent) => boolean,\r\n        compositionEndCallback: (args: CompositionEvent) => boolean) {\r\n        const compositionStartHandler = (args: CompositionEvent) => {\r\n            if (compositionStartCallback(args)) {\r\n                args.preventDefault();\r\n            }\r\n        };\r\n        element.addEventListener(\"compositionstart\", compositionStartHandler);\r\n\r\n        const beforeInputHandler = (args: InputEvent) => {\r\n            const ranges = args.getTargetRanges();\r\n            let start = -1;\r\n            let end = -1;\r\n            if (ranges.length > 0) {\r\n                start = ranges[0].startOffset;\r\n                end = ranges[0].endOffset;\r\n            }\r\n\r\n            if (args.inputType === \"insertCompositionText\") {\r\n                start = 2;\r\n                end = start + 2;\r\n            }\r\n            if (beforeInputCallback(args, start, end)) {\r\n                args.preventDefault();\r\n            }\r\n        };\r\n        element.addEventListener(\"beforeinput\", beforeInputHandler);\r\n\r\n        const compositionUpdateHandler = (args: CompositionEvent) => {\r\n            if (compositionUpdateCallback(args)) {\r\n                args.preventDefault();\r\n            }\r\n        };\r\n        element.addEventListener(\"compositionupdate\", compositionUpdateHandler);\r\n\r\n        const compositionEndHandler = (args: CompositionEvent) => {\r\n            if (compositionEndCallback(args)) {\r\n                args.preventDefault();\r\n            }\r\n        };\r\n        element.addEventListener(\"compositionend\", compositionEndHandler);\r\n\r\n        return () => {\r\n            element.removeEventListener(\"compositionstart\", compositionStartHandler);\r\n            element.removeEventListener(\"compositionupdate\", compositionUpdateHandler);\r\n            element.removeEventListener(\"compositionend\", compositionEndHandler);\r\n        };\r\n    }\r\n\r\n    public static subscribePointerEvents(\r\n        element: HTMLInputElement,\r\n        pointerMoveCallback: (args: PointerEvent) => boolean,\r\n        pointerDownCallback: (args: PointerEvent) => boolean,\r\n        pointerUpCallback: (args: PointerEvent) => boolean,\r\n        pointerCancelCallback: (args: PointerEvent) => boolean,\r\n        wheelCallback: (args: WheelEvent) => boolean\r\n    ) {\r\n        const pointerMoveHandler = (args: PointerEvent) => {\r\n            pointerMoveCallback(args);\r\n            args.preventDefault();\r\n        };\r\n\r\n        const pointerDownHandler = (args: PointerEvent) => {\r\n            pointerDownCallback(args);\r\n            args.preventDefault();\r\n        };\r\n\r\n        const pointerUpHandler = (args: PointerEvent) => {\r\n            pointerUpCallback(args);\r\n            args.preventDefault();\r\n        };\r\n\r\n        const pointerCancelHandler = (args: PointerEvent) => {\r\n            pointerCancelCallback(args);\r\n            args.preventDefault();\r\n        };\r\n\r\n        const wheelHandler = (args: WheelEvent) => {\r\n            wheelCallback(args);\r\n            args.preventDefault();\r\n        };\r\n\r\n        element.addEventListener(\"pointermove\", pointerMoveHandler);\r\n        element.addEventListener(\"pointerdown\", pointerDownHandler);\r\n        element.addEventListener(\"pointerup\", pointerUpHandler);\r\n        element.addEventListener(\"wheel\", wheelHandler);\r\n        element.addEventListener(\"pointercancel\", pointerCancelHandler);\r\n\r\n        return () => {\r\n            element.removeEventListener(\"pointerover\", pointerMoveHandler);\r\n            element.removeEventListener(\"pointerdown\", pointerDownHandler);\r\n            element.removeEventListener(\"pointerup\", pointerUpHandler);\r\n            element.removeEventListener(\"pointercancel\", pointerCancelHandler);\r\n            element.removeEventListener(\"wheel\", wheelHandler);\r\n        };\r\n    }\r\n\r\n    public static subscribeInputEvents(\r\n        element: HTMLInputElement,\r\n        inputCallback: (value: string) => boolean\r\n    ) {\r\n        const inputHandler = (args: Event) => {\r\n            if (inputCallback((args as any).value)) {\r\n                args.preventDefault();\r\n            }\r\n        };\r\n        element.addEventListener(\"input\", inputHandler);\r\n\r\n        return () => {\r\n            element.removeEventListener(\"input\", inputHandler);\r\n        };\r\n    }\r\n\r\n    public static subscribeDropEvents(\r\n        element: HTMLInputElement,\r\n        dragEvent: (args: any) => boolean\r\n    ) {\r\n        const dragHandler = (args: Event) => {\r\n            if (dragEvent(args as any)) {\r\n                args.preventDefault();\r\n            }\r\n        };\r\n        element.addEventListener(\"dragover\", dragHandler);\r\n        element.addEventListener(\"dragenter\", dragHandler);\r\n        element.addEventListener(\"dragleave\", dragHandler);\r\n        element.addEventListener(\"drop\", dragHandler);\r\n\r\n        return () => {\r\n            element.removeEventListener(\"dragover\", dragHandler);\r\n            element.removeEventListener(\"dragenter\", dragHandler);\r\n            element.removeEventListener(\"dragleave\", dragHandler);\r\n            element.removeEventListener(\"drop\", dragHandler);\r\n        };\r\n    }\r\n\r\n    public static getCoalescedEvents(pointerEvent: PointerEvent): PointerEvent[] {\r\n        return pointerEvent.getCoalescedEvents();\r\n    }\r\n\r\n    public static subscribeKeyboardGeometryChange(\r\n        element: HTMLInputElement,\r\n        handler: (args: any) => boolean) {\r\n        if (\"virtualKeyboard\" in navigator) {\r\n            // (navigator as any).virtualKeyboard.overlaysContent = true;\r\n            (navigator as any).virtualKeyboard.addEventListener(\"geometrychange\", (event: any) => {\r\n                const elementRect = element.getBoundingClientRect();\r\n                const keyboardRect = event.target.boundingRect as DOMRect;\r\n                handler({\r\n                    x: keyboardRect.x - elementRect.x,\r\n                    y: keyboardRect.y - elementRect.y,\r\n                    width: keyboardRect.width,\r\n                    height: keyboardRect.height\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    public static subscribeVisibilityChange(\r\n        handler: (state: boolean) => void): boolean {\r\n        document.addEventListener(\"visibilitychange\", () => {\r\n            handler(document.visibilityState === \"visible\");\r\n        });\r\n        return document.visibilityState === \"visible\";\r\n    }\r\n\r\n    public static clearInput(inputElement: HTMLInputElement) {\r\n        inputElement.value = \"\";\r\n    }\r\n\r\n    public static focusElement(inputElement: HTMLElement) {\r\n        inputElement.focus();\r\n    }\r\n\r\n    public static setCursor(inputElement: HTMLInputElement, kind: string) {\r\n        if (kind === \"default\") {\r\n            inputElement.style.removeProperty(\"cursor\");\r\n        } else {\r\n            inputElement.style.cursor = kind;\r\n        }\r\n    }\r\n\r\n    public static setBounds(inputElement: HTMLInputElement, x: number, y: number, caretWidth: number, caretHeight: number, caret: number) {\r\n        inputElement.style.left = (x).toFixed(0) + \"px\";\r\n        inputElement.style.top = (y).toFixed(0) + \"px\";\r\n\r\n        const { left, top } = CaretHelper.getCaretCoordinates(inputElement, caret);\r\n\r\n        inputElement.style.left = (x - left).toFixed(0) + \"px\";\r\n        inputElement.style.top = (y - top).toFixed(0) + \"px\";\r\n    }\r\n\r\n    public static hide(inputElement: HTMLInputElement) {\r\n        inputElement.style.display = \"none\";\r\n    }\r\n\r\n    public static show(inputElement: HTMLInputElement) {\r\n        inputElement.style.display = \"block\";\r\n    }\r\n\r\n    public static setSurroundingText(inputElement: HTMLInputElement, text: string, start: number, end: number) {\r\n        if (!inputElement) {\r\n            return;\r\n        }\r\n\r\n        inputElement.value = text;\r\n        inputElement.setSelectionRange(start, end);\r\n        inputElement.style.width = \"20px\";\r\n        inputElement.style.width = `${inputElement.scrollWidth}px`;\r\n    }\r\n\r\n    private static getModifiers(args: KeyboardEvent): string {\r\n        let modifiers = RawInputModifiers.None;\r\n\r\n        if (args.ctrlKey) { modifiers |= RawInputModifiers.Control; }\r\n        if (args.altKey) { modifiers |= RawInputModifiers.Alt; }\r\n        if (args.shiftKey) { modifiers |= RawInputModifiers.Shift; }\r\n        if (args.metaKey) { modifiers |= RawInputModifiers.Meta; }\r\n\r\n        return modifiers.toString();\r\n    }\r\n\r\n    public static setPointerCapture(containerElement: HTMLInputElement, pointerId: number): void {\r\n        containerElement.setPointerCapture(pointerId);\r\n    }\r\n\r\n    public static releasePointerCapture(containerElement: HTMLInputElement, pointerId: number): void {\r\n        if (containerElement.hasPointerCapture(pointerId)) {\r\n            containerElement.releasePointerCapture(pointerId);\r\n        }\r\n    }\r\n}\r\n", "\r\nexport class AvaloniaDOM {\r\n    public static addClass(element: HTMLElement, className: string): void {\r\n        element.classList.add(className);\r\n    }\r\n\r\n    static observeDarkMode(observer: (isDarkMode: boolean, isHighContrast: boolean) => boolean) {\r\n        if (globalThis.matchMedia === undefined) {\r\n            return false;\r\n        }\r\n\r\n        const colorShemeMedia = globalThis.matchMedia(\"(prefers-color-scheme: dark)\");\r\n        const prefersContrastMedia = globalThis.matchMedia(\"(prefers-contrast: more)\");\r\n\r\n        colorShemeMedia.addEventListener(\"change\", (args: MediaQueryListEvent) => {\r\n            observer(args.matches, prefersContrastMedia.matches);\r\n        });\r\n        prefersContrastMedia.addEventListener(\"change\", (args: MediaQueryListEvent) => {\r\n            observer(colorShemeMedia.matches, args.matches);\r\n        });\r\n\r\n        return {\r\n            isDarkMode: colorShemeMedia.matches,\r\n            isHighContrast: prefersContrastMedia.matches\r\n        };\r\n    }\r\n\r\n    static getFirstElementByClassName(className: string, parent?: HTMLElement): Element | null {\r\n        const elements = (parent ?? globalThis.document).getElementsByClassName(className);\r\n        return elements ? elements[0] : null;\r\n    }\r\n\r\n    static createAvaloniaCanvas(host: HTMLElement): HTMLCanvasElement {\r\n        const containerId = host.getAttribute(\"data-containerId\") ?? \"0000\";\r\n\r\n        const canvas = document.createElement(\"canvas\");\r\n        canvas.id = `canvas${containerId}`;\r\n        canvas.classList.add(\"avalonia-canvas\");\r\n        canvas.style.width = \"100%\";\r\n        canvas.style.height = \"100%\";\r\n        canvas.style.position = \"absolute\";\r\n\r\n        return canvas;\r\n    }\r\n\r\n    static attachCanvas(host: HTMLElement, canvas: HTMLCanvasElement): void {\r\n        host.prepend(canvas);\r\n    }\r\n\r\n    static detachCanvas(host: HTMLElement, canvas: HTMLCanvasElement): void {\r\n        host.removeChild(canvas);\r\n    }\r\n\r\n    static createAvaloniaHost(host: HTMLElement) {\r\n        const containerId = Math.random().toString(36).replace(/[^a-z]+/g, \"\").substr(2, 10);\r\n\r\n        // Root element\r\n        host.classList.add(\"avalonia-container\");\r\n        host.tabIndex = 0;\r\n        host.setAttribute(\"data-containerId\", containerId);\r\n        host.oncontextmenu = function () { return false; };\r\n        host.style.overflow = \"hidden\";\r\n        host.style.touchAction = \"none\";\r\n\r\n        // Canvas is lazily created depending on the rendering mode. See createAvaloniaCanvas usage.\r\n\r\n        // Native controls host\r\n        const nativeHost = document.createElement(\"div\");\r\n        nativeHost.id = `nativeHost${containerId}`;\r\n        nativeHost.classList.add(\"avalonia-native-host\");\r\n        nativeHost.style.left = \"0px\";\r\n        nativeHost.style.top = \"0px\";\r\n        nativeHost.style.width = \"100%\";\r\n        nativeHost.style.height = \"100%\";\r\n        nativeHost.style.position = \"absolute\";\r\n\r\n        // IME\r\n        const inputElement = document.createElement(\"input\");\r\n        inputElement.id = `inputElement${containerId}`;\r\n        inputElement.classList.add(\"avalonia-input-element\");\r\n        inputElement.autocapitalize = \"none\";\r\n        inputElement.type = \"text\";\r\n        inputElement.spellcheck = false;\r\n        inputElement.style.padding = \"0\";\r\n        inputElement.style.margin = \"0\";\r\n        inputElement.style.borderWidth = \"0\";\r\n        inputElement.style.position = \"absolute\";\r\n        inputElement.style.overflow = \"hidden\";\r\n        inputElement.style.borderStyle = \"hidden\";\r\n        inputElement.style.outline = \"none\";\r\n        inputElement.style.background = \"transparent\";\r\n        inputElement.style.color = \"transparent\";\r\n        inputElement.style.display = \"none\";\r\n        inputElement.style.height = \"20px\";\r\n        inputElement.style.zIndex = \"-1\";\r\n        inputElement.onpaste = function () { return false; };\r\n        inputElement.oncopy = function () { return false; };\r\n        inputElement.oncut = function () { return false; };\r\n\r\n        host.prepend(inputElement);\r\n        host.prepend(nativeHost);\r\n\r\n        return {\r\n            host,\r\n            nativeHost,\r\n            inputElement\r\n        };\r\n    }\r\n\r\n    public static isFullscreen(): boolean {\r\n        return document.fullscreenElement != null;\r\n    }\r\n\r\n    public static async setFullscreen(isFullscreen: boolean) {\r\n        if (isFullscreen) {\r\n            const doc = document.documentElement;\r\n            await doc.requestFullscreen();\r\n        } else {\r\n            await document.exitFullscreen();\r\n        }\r\n    }\r\n\r\n    public static initSafeAreaPadding(): void {\r\n        document.documentElement.style.setProperty(\"--av-sat\", \"env(safe-area-inset-top)\");\r\n        document.documentElement.style.setProperty(\"--av-sar\", \"env(safe-area-inset-right)\");\r\n        document.documentElement.style.setProperty(\"--av-sab\", \"env(safe-area-inset-bottom)\");\r\n        document.documentElement.style.setProperty(\"--av-sal\", \"env(safe-area-inset-left)\");\r\n    }\r\n\r\n    public static getSafeAreaPadding(): number[] {\r\n        const top = parseFloat(getComputedStyle(document.documentElement).getPropertyValue(\"--av-sat\"));\r\n        const bottom = parseFloat(getComputedStyle(document.documentElement).getPropertyValue(\"--av-sab\"));\r\n        const left = parseFloat(getComputedStyle(document.documentElement).getPropertyValue(\"--av-sal\"));\r\n        const right = parseFloat(getComputedStyle(document.documentElement).getPropertyValue(\"--av-sar\"));\r\n\r\n        return [left, top, bottom, right];\r\n    }\r\n}\r\n", "export class Caniuse {\r\n    public static hasNativeFilePicker(): boolean {\r\n        return \"showSaveFilePicker\" in globalThis;\r\n    }\r\n\r\n    public static isMobile(): boolean {\r\n        const userAgentData = (globalThis.navigator as any)?.userAgentData;\r\n        if (userAgentData) {\r\n            return userAgentData.mobile;\r\n        }\r\n\r\n        const userAgent = navigator.userAgent;\r\n        const regex1 = /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i;\r\n        const regex2 = /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw(n|u)|c55\\/|capi|ccwa|cdm|cell|chtm|cldc|cmd|co(mp|nd)|craw|da(it|ll|ng)|dbte|dcs|devi|dica|dmob|do(c|p)o|ds(12|d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(|_)|g1 u|g560|gene|gf5|gmo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd(m|p|t)|hei|hi(pt|ta)|hp( i|ip)|hsc|ht(c(| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i(20|go|ma)|i230|iac( ||\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|[a-w])|libw|lynx|m1w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|mcr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|([1-8]|c))|phil|pire|pl(ay|uc)|pn2|po(ck|rt|se)|prox|psio|ptg|qaa|qc(07|12|21|32|60|[2-7]|i)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h|oo|p)|sdk\\/|se(c(|0|1)|47|mc|nd|ri)|sgh|shar|sie(|m)|sk0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h|v|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl|tdg|tel(i|m)|tim|tmo|to(pl|sh)|ts(70|m|m3|m5)|tx9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas|your|zeto|zte/i;\r\n        return regex1.test(userAgent) || regex2.test(userAgent.substr(0, 4));\r\n    }\r\n\r\n    public static isTv(): boolean {\r\n        return navigator.userAgent.includes(\"SmartTV\");\r\n    }\r\n}\r\n", "import FileSystemWritableFileStream from \"native-file-system-adapter/types/src/FileSystemWritableFileStream\";\r\n\r\nconst sharedArrayBufferDefined = typeof SharedArrayBuffer !== \"undefined\";\r\nexport function isSharedArrayBuffer(buffer: any): buffer is SharedArrayBuffer {\r\n    // BEWARE: In some cases, `instanceof SharedArrayBuffer` returns false even though buffer is an SAB.\r\n    // Patch adapted from https://github.com/emscripten-core/emscripten/pull/16994\r\n    // See also https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/toStringTag\r\n    return sharedArrayBufferDefined && buffer[Symbol.toStringTag] === \"SharedArrayBuffer\";\r\n}\r\n\r\nexport class StreamHelper {\r\n    public static async seek(stream: FileSystemWritableFileStream, position: number) {\r\n        return await stream.seek(position);\r\n    }\r\n\r\n    public static async truncate(stream: FileSystemWritableFileStream, size: number) {\r\n        return await stream.truncate(size);\r\n    }\r\n\r\n    public static async close(stream: FileSystemWritableFileStream) {\r\n        return await stream.close();\r\n    }\r\n\r\n    public static async write(stream: FileSystemWritableFileStream, span: any, offset: number, count: number) {\r\n        const heap8 = globalThis.getDotnetRuntime(0)?.localHeapViewU8();\r\n\r\n        let buffer: Uint8Array;\r\n        if (span._pointer > 0 && span._length > 0 && heap8 && !isSharedArrayBuffer(heap8.buffer)) {\r\n            // Attempt to use undocumented access to the HEAP8 directly\r\n            // Note, SharedArrayBuffer cannot be used with ImageData (when WasmEnableThreads = true).\r\n            buffer = new Uint8Array(heap8.buffer, span._pointer as number + offset, count);\r\n        } else {\r\n            // Or fallback to the normal API that does multiple array copies.\r\n            const copy = new Uint8Array(count);\r\n            span.copyTo(copy, offset);\r\n            buffer = span;\r\n        }\r\n\r\n        return await stream.write(buffer);\r\n    }\r\n\r\n    public static byteLength(stream: Blob) {\r\n        return stream.size;\r\n    }\r\n\r\n    public static async sliceArrayBuffer(stream: Blob, offset: number, count: number) {\r\n        const buffer = await stream.slice(offset, offset + count).arrayBuffer();\r\n        return new Uint8Array(buffer);\r\n    }\r\n\r\n    public static toMemoryView(buffer: Uint8Array): Uint8Array {\r\n        return buffer;\r\n    }\r\n}\r\n", "class NativeControlHostTopLevelAttachment {\r\n    _child?: HTMLElement;\r\n    _host?: HTMLElement;\r\n}\r\n\r\nexport class NativeControlHost {\r\n    public static createDefaultChild(parent?: HTMLElement): HTMLElement {\r\n        return document.createElement(\"div\");\r\n    }\r\n\r\n    public static createAttachment(): NativeControlHostTopLevelAttachment {\r\n        return new NativeControlHostTopLevelAttachment();\r\n    }\r\n\r\n    public static initializeWithChildHandle(element: NativeControlHostTopLevelAttachment, child: HTMLElement): void {\r\n        element._child = child;\r\n        element._child.style.position = \"absolute\";\r\n    }\r\n\r\n    public static attachTo(element: NativeControlHostTopLevelAttachment, host?: HTMLElement): void {\r\n        if (element._host && element._child) {\r\n            element._host.removeChild(element._child);\r\n        }\r\n\r\n        element._host = host;\r\n\r\n        if (element._host && element._child) {\r\n            element._host.appendChild(element._child);\r\n        }\r\n    }\r\n\r\n    public static showInBounds(element: NativeControlHostTopLevelAttachment, x: number, y: number, width: number, height: number): void {\r\n        if (element._child) {\r\n            element._child.style.top = `${y}px`;\r\n            element._child.style.left = `${x}px`;\r\n            element._child.style.width = `${width}px`;\r\n            element._child.style.height = `${height}px`;\r\n            element._child.style.display = \"block\";\r\n        }\r\n    }\r\n\r\n    public static hideWithSize(element: NativeControlHostTopLevelAttachment, width: number, height: number): void {\r\n        if (element._child) {\r\n            element._child.style.width = `${width}px`;\r\n            element._child.style.height = `${height}px`;\r\n            element._child.style.display = \"none\";\r\n        }\r\n    }\r\n\r\n    public static releaseChild(element: NativeControlHostTopLevelAttachment): void {\r\n        if (element._child) {\r\n            element._child = undefined;\r\n        }\r\n    }\r\n}\r\n", "export class NavigationHelper {\r\n    public static addBackHandler(backHandlerCallback: () => Boolean) {\r\n        history.pushState(null, \"\", window.location.href);\r\n        window.onpopstate = () => {\r\n            const handled = backHandlerCallback();\r\n\r\n            if (!handled) {\r\n                history.back();\r\n            } else {\r\n                history.forward();\r\n            }\r\n        };\r\n    }\r\n}\r\n", "export class GeneralHelpers {\r\n    public static itemsArrayAt(instance: any, key: any): any[] {\r\n        const items = instance[key];\r\n        if (!items) {\r\n            return [];\r\n        }\r\n\r\n        const retItems = [];\r\n        for (let i = 0; i < items.length; i++) {\r\n            retItems[i] = items[i];\r\n        }\r\n        return retItems;\r\n    }\r\n\r\n    public static itemAt(instance: any, key: any): any {\r\n        const item = instance[key];\r\n        return item;\r\n    }\r\n\r\n    public static callMethod(instance: any, name: string /*, args */): any {\r\n        const args = Array.prototype.slice.call(arguments, 2);\r\n        return instance[name].apply(instance, args);\r\n    }\r\n}\r\n", "export class TimerHelper {\r\n    public static runAnimationFrames(renderFrameCallback: (timestamp: number) => boolean): void {\r\n        function render(time: number) {\r\n            const next = renderFrameCallback(time);\r\n            if (next) {\r\n                window.requestAnimationFrame(render);\r\n            }\r\n        }\r\n\r\n        window.requestAnimationFrame(render);\r\n    }\r\n}\r\n", "export type AvaloniaRenderingContext = RenderingContext;\r\n\r\nexport enum BrowserRenderingMode {\r\n    Software2D = 1,\r\n    WebGL1,\r\n    WebGL2\r\n}\r\n\r\nexport abstract class CanvasSurface {\r\n    constructor(\r\n        public context: AvaloniaRenderingContext,\r\n        public mode: BrowserRenderingMode) {\r\n    }\r\n\r\n    abstract destroy(): void;\r\n    abstract ensureSize(): void;\r\n    abstract onSizeChanged(sizeChangedCallback: (width: number, height: number, dpr: number) => void): void;\r\n}\r\n", "type ResizeObserverWithCallbacks = {\r\n    callbacks: Map<Element, ((width: number, height: number, dpr: number) => void)>;\r\n} & ResizeObserver;\r\n\r\nexport class ResizeHandler {\r\n    private static resizeObserver?: ResizeObserverWithCallbacks;\r\n\r\n    public static observeSize(element: HTMLElement, callback: (width: number, height: number, dpr: number) => void) : (() => void) {\r\n        if (!this.resizeObserver) {\r\n            this.resizeObserver = new ResizeObserver(this.onResize) as ResizeObserverWithCallbacks;\r\n            this.resizeObserver.callbacks = new Map<Element, ((width: number, height: number, dpr: number) => void)>();\r\n        }\r\n\r\n        this.resizeObserver.callbacks.set(element, callback);\r\n        this.resizeObserver.observe(element, { box: \"content-box\" });\r\n\r\n        return () => {\r\n            this.resizeObserver?.callbacks.delete(element);\r\n            this.resizeObserver?.unobserve(element);\r\n        };\r\n    }\r\n\r\n    private static onResize(entries: ResizeObserverEntry[], observer: ResizeObserver) {\r\n        for (const entry of entries) {\r\n            const callback = (observer as ResizeObserverWithCallbacks).callbacks.get(entry.target);\r\n            if (!callback) {\r\n                continue;\r\n            }\r\n\r\n            const trueDpr = window.devicePixelRatio;\r\n            let width;\r\n            let height;\r\n            let dpr = trueDpr;\r\n            if (entry.devicePixelContentBoxSize) {\r\n                // NOTE: Only this path gives the correct answer\r\n                // The other paths are imperfect fallbacks\r\n                // for browsers that don't provide anyway to do this\r\n                width = entry.devicePixelContentBoxSize[0].inlineSize;\r\n                height = entry.devicePixelContentBoxSize[0].blockSize;\r\n                dpr = 1; // it's already in width and height\r\n            } else if (entry.contentBoxSize) {\r\n                if (entry.contentBoxSize[0]) {\r\n                    width = entry.contentBoxSize[0].inlineSize;\r\n                    height = entry.contentBoxSize[0].blockSize;\r\n                } else {\r\n                    width = (entry.contentBoxSize as any).inlineSize;\r\n                    height = (entry.contentBoxSize as any).blockSize;\r\n                }\r\n            } else {\r\n                width = entry.contentRect.width;\r\n                height = entry.contentRect.height;\r\n            }\r\n            const displayWidth = Math.round(width * dpr);\r\n            const displayHeight = Math.round(height * dpr);\r\n            callback(displayWidth, displayHeight, trueDpr);\r\n        }\r\n    }\r\n}\r\n", "import { ResizeHandler } from \"./resizeHandler\";\r\nimport { CanvasSurface, AvaloniaRenderingContext, BrowserRenderingMode } from \"./surfaceBase\";\r\n\r\nexport abstract class HtmlCanvasSurfaceBase extends CanvasSurface {\r\n    private sizeParams?: [number, number, number];\r\n    private sizeChangedCallback?: (width: number, height: number, dpr: number) => void;\r\n\r\n    constructor(\r\n        public canvas: HTMLCanvasElement,\r\n        public context: AvaloniaRenderingContext,\r\n        public mode: BrowserRenderingMode) {\r\n        super(context, mode);\r\n\r\n        // No need to ubsubsribe, canvas never leaves JS world, it should be GC'ed with all callbacks.\r\n        ResizeHandler.observeSize(canvas, (width, height, dpr) => {\r\n            this.sizeParams = [width, height, dpr];\r\n\r\n            if (this.sizeChangedCallback) {\r\n                this.sizeChangedCallback(width, height, dpr);\r\n            }\r\n        });\r\n    }\r\n\r\n    public destroy(): void {\r\n        delete this.sizeChangedCallback;\r\n    }\r\n\r\n    public onSizeChanged(sizeChangedCallback: (width: number, height: number, dpr: number) => void) {\r\n        if (this.sizeChangedCallback) { throw new Error(\"For simplicity, we don't support multiple size changed callbacks per surface, not needed yet.\"); }\r\n        this.sizeChangedCallback = sizeChangedCallback;\r\n    }\r\n\r\n    public ensureSize() {\r\n        if (this.sizeParams) {\r\n            this.canvas.width = this.sizeParams[0];\r\n            this.canvas.height = this.sizeParams[1];\r\n            delete this.sizeParams;\r\n        }\r\n    }\r\n}\r\n", "import { BrowserRenderingMode } from \"./surfaceBase\";\r\nimport { HtmlCanvasSurfaceBase } from \"./htmlSurfaceBase\";\r\nimport { RuntimeAPI } from \"../../../types/dotnet\";\r\nimport { isSharedArrayBuffer } from \"../stream\";\r\n\r\nexport class SoftwareSurface extends HtmlCanvasSurfaceBase {\r\n    private readonly runtime: RuntimeAPI | undefined;\r\n\r\n    constructor(public canvas: HTMLCanvasElement) {\r\n        const context = canvas.getContext(\"2d\", {\r\n            alpha: true\r\n        });\r\n        if (!context) {\r\n            throw new Error(\"HTMLCanvasElement.getContext(2d) returned null.\");\r\n        }\r\n        super(canvas, context, BrowserRenderingMode.Software2D);\r\n\r\n        this.runtime = globalThis.getDotnetRuntime(0);\r\n    }\r\n\r\n    public putPixelData(span: any /* IMemoryView */, width: number, height: number): void {\r\n        this.ensureSize();\r\n\r\n        const heap8 = this.runtime?.localHeapViewU8();\r\n\r\n        let clampedBuffer: Uint8ClampedArray;\r\n        if (span._pointer > 0 && span._length > 0 && heap8 && !isSharedArrayBuffer(heap8.buffer)) {\r\n            // Attempt to use undocumented access to the HEAP8 directly\r\n            // Note, SharedArrayBuffer cannot be used with ImageData (when WasmEnableThreads = true).\r\n            clampedBuffer = new Uint8ClampedArray(heap8.buffer, span._pointer, span._length);\r\n        } else {\r\n            // Or fallback to the normal API that does multiple array copies.\r\n            const copy = new Uint8Array(span.byteLength);\r\n            span.copyTo(copy);\r\n            clampedBuffer = new Uint8ClampedArray(copy.buffer);\r\n        }\r\n\r\n        const imageData = new ImageData(clampedBuffer, width, height);\r\n        (this.context as CanvasRenderingContext2D).putImageData(imageData, 0, 0);\r\n    }\r\n}\r\n", "import { BrowserRenderingMode } from \"./surfaceBase\";\r\nimport { HtmlCanvasSurfaceBase } from \"./htmlSurfaceBase\";\r\n\r\nfunction getGL(): any {\r\n    const self = globalThis as any;\r\n    const module = self.Module ?? self.getDotnetRuntime(0)?.Module;\r\n    return module?.GL ?? self.AvaloniaGL ?? self.SkiaSharpGL;\r\n}\r\n\r\nexport class WebGlSurface extends HtmlCanvasSurfaceBase {\r\n    public contextHandle?: number;\r\n    public fboId?: number;\r\n    public stencil?: number;\r\n    public sample?: number;\r\n    public depth?: number;\r\n\r\n    constructor(public canvas: HTMLCanvasElement, mode: BrowserRenderingMode.WebGL1 | BrowserRenderingMode.WebGL2) {\r\n        // Skia only understands WebGL context wrapped in Emscripten.\r\n        const gl = getGL();\r\n        if (!gl) {\r\n            throw new Error(\"Module.GL object wasn't initialized, WebGL can't be used.\");\r\n        }\r\n\r\n        const modeStr = mode === BrowserRenderingMode.WebGL1 ? \"webgl\" : \"webgl2\";\r\n        const attrs: WebGLContextAttributes | any =\r\n        {\r\n            alpha: true,\r\n            depth: true,\r\n            stencil: true,\r\n            antialias: false,\r\n            premultipliedAlpha: true,\r\n            preserveDrawingBuffer: false,\r\n            // only supported on older browsers, which is perfect as we want to fallback to 2d there.\r\n            failIfMajorPerformanceCaveat: true,\r\n            // attrs used by Emscripten:\r\n            majorVersion: mode === BrowserRenderingMode.WebGL1 ? 1 : 2,\r\n            minorVersion: 0,\r\n            enableExtensionsByDefault: 1,\r\n            explicitSwapControl: 0\r\n        };\r\n        const context = canvas.getContext(modeStr, attrs) as WebGLRenderingContext;\r\n        if (!context) {\r\n            throw new Error(`HTMLCanvasElement.getContext(${modeStr}) returned null.`);\r\n        }\r\n\r\n        const handle = gl.registerContext(context, attrs);\r\n        gl.makeContextCurrent(handle);\r\n        (context as any).gl_handle = handle;\r\n\r\n        super(canvas, context, BrowserRenderingMode.Software2D);\r\n\r\n        this.contextHandle = handle;\r\n        this.fboId = context.getParameter(context.FRAMEBUFFER_BINDING)?.id ?? 0;\r\n        this.stencil = context.getParameter(context.STENCIL_BITS);\r\n        this.sample = context.getParameter(context.SAMPLES);\r\n        this.depth = context.getParameter(context.DEPTH_BITS);\r\n    }\r\n}\r\n", "import { AvaloniaDOM } from \"../dom\";\r\nimport { SoftwareSurface } from \"./softwareSurface\";\r\nimport { BrowserRenderingMode, CanvasSurface } from \"./surfaceBase\";\r\nimport { WebGlSurface } from \"./webGlSurface\";\r\n\r\nexport class CanvasFactory {\r\n    public static create(container: HTMLElement, mode: BrowserRenderingMode): CanvasSurface {\r\n        if (!container) {\r\n            throw new Error(\"No html container was provided.\");\r\n        }\r\n\r\n        const canvas = AvaloniaDOM.createAvaloniaCanvas(container);\r\n        AvaloniaDOM.attachCanvas(container, canvas);\r\n\r\n        try {\r\n            if (mode === BrowserRenderingMode.Software2D) {\r\n                return new SoftwareSurface(canvas);\r\n            } else if (mode === BrowserRenderingMode.WebGL1 || mode === BrowserRenderingMode.WebGL2) {\r\n                return new WebGlSurface(canvas, mode);\r\n            } else {\r\n                throw new Error(`Unsupported rendering mode: ${BrowserRenderingMode[mode]}`);\r\n            }\r\n        } catch (ex) {\r\n            AvaloniaDOM.detachCanvas(container, canvas);\r\n            throw ex;\r\n        }\r\n    }\r\n\r\n    public static destroy(surface: CanvasSurface) {\r\n        surface.destroy();\r\n    }\r\n\r\n    public static onSizeChanged(surface: CanvasSurface, sizeChangedCallback: (width: number, height: number, dpr: number) => void) {\r\n        surface.onSizeChanged(sizeChangedCallback);\r\n    }\r\n\r\n    public static ensureSize(surface: CanvasSurface): void {\r\n        surface.ensureSize();\r\n    }\r\n\r\n    public static putPixelData(surface: SoftwareSurface, span: any /* IMemoryView */, width: number, height: number): void {\r\n        surface.putPixelData(span, width, height);\r\n    }\r\n}\r\n", "import { InputHelper } from \"./avalonia/input\";\r\nimport { AvaloniaDOM } from \"./avalonia/dom\";\r\nimport { Caniuse } from \"./avalonia/caniuse\";\r\nimport { StreamHelper } from \"./avalonia/stream\";\r\nimport { NativeControlHost } from \"./avalonia/nativeControlHost\";\r\nimport { NavigationHelper } from \"./avalonia/navigationHelper\";\r\nimport { GeneralHelpers } from \"./avalonia/generalHelpers\";\r\nimport { TimerHelper } from \"./avalonia/timer\";\r\nimport { CanvasFactory } from \"./avalonia/surfaces/surfaceFactory\";\r\n\r\nasync function registerServiceWorker(path: string, scope: string | undefined) {\r\n    if (\"serviceWorker\" in navigator) {\r\n        await globalThis.navigator.serviceWorker.register(path, scope ? { scope } : undefined);\r\n    }\r\n}\r\n\r\nexport {\r\n    Caniuse,\r\n    CanvasFactory,\r\n    InputHelper,\r\n    AvaloniaDOM,\r\n    StreamHelper,\r\n    NativeControlHost,\r\n    NavigationHelper,\r\n    GeneralHelpers,\r\n    TimerHelper,\r\n    registerServiceWorker\r\n};\r\n"],
  "mappings": "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",
  "names": ["CaretHelper", "element", "position", "options", "_a", "_b", "isBrowser", "debug", "el", "div", "style", "computed", "isInput", "properties", "prop", "height", "outerHeight", "targetHeight", "isFirefox", "span", "coordinates", "InputHelper", "args", "resolve", "reject", "element", "keyDownCallback", "keyUpCallback", "keyDownHandler", "keyUpHandler", "beforeInputCallback", "compositionStartCallback", "compositionUpdateCallback", "compositionEndCallback", "compositionStartHandler", "beforeInputHandler", "ranges", "start", "end", "compositionUpdateHandler", "compositionEndHandler", "pointerMoveCallback", "pointerDownCallback", "pointerUpCallback", "pointerCancelCallback", "wheelCallback", "pointerMoveHandler", "pointerDownHandler", "pointerUpHandler", "pointerCancelHandler", "wheelHandler", "inputCallback", "inputHandler", "dragEvent", "dragHandler", "pointerEvent", "handler", "event", "elementRect", "keyboardRect", "inputElement", "kind", "x", "y", "caretWidth", "caretHeight", "caret", "left", "top", "CaretHelper", "text", "modifiers", "containerElement", "pointerId", "AvaloniaDOM", "element", "className", "observer", "colorShemeMedia", "prefersContrastMedia", "args", "parent", "elements", "host", "_a", "containerId", "canvas", "nativeHost", "inputElement", "isFullscreen", "top", "bottom", "left", "right", "Caniuse", "_a", "userAgentData", "userAgent", "regex1", "regex2", "sharedArrayBufferDefined", "isSharedArrayBuffer", "buffer", "StreamHelper", "stream", "position", "size", "span", "offset", "count", "_a", "heap8", "copy", "NativeControlHostTopLevelAttachment", "NativeControlHost", "parent", "element", "child", "host", "x", "y", "width", "height", "NavigationHelper", "backHandlerCallback", "GeneralHelpers", "instance", "key", "items", "retItems", "i", "name", "args", "TimerHelper", "renderFrameCallback", "render", "time", "BrowserRenderingMode", "CanvasSurface", "context", "mode", "ResizeHandler", "element", "callback", "_a", "_b", "entries", "observer", "entry", "trueDpr", "width", "height", "dpr", "displayWidth", "displayHeight", "HtmlCanvasSurfaceBase", "CanvasSurface", "canvas", "context", "mode", "ResizeHandler", "width", "height", "dpr", "sizeChangedCallback", "SoftwareSurface", "HtmlCanvasSurfaceBase", "canvas", "context", "span", "width", "height", "_a", "heap8", "clampedBuffer", "isSharedArrayBuffer", "copy", "imageData", "getGL", "_a", "_b", "_c", "_d", "self", "module", "WebGlSurface", "HtmlCanvasSurfaceBase", "canvas", "mode", "gl", "modeStr", "attrs", "context", "handle", "CanvasFactory", "container", "mode", "canvas", "AvaloniaDOM", "SoftwareSurface", "WebGlSurface", "BrowserRenderingMode", "ex", "surface", "sizeChangedCallback", "span", "width", "height", "registerServiceWorker", "path", "scope"]
}
